on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

permissions:
  contents: read

env:
  TAG: ${{ github.ref_name }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    environment: release  # Guarantee this workflow only runs with my explicit approval

    outputs:
      hashes: ${{ steps.hashes.outputs.hashes }}

    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      - uses: actions/setup-python@3542bca2639a428e1796aaa6a2ffef0c0f575566 # v3.1.4

      - name: Confirm tag name matches pyproject.toml
        run: |
          VERSION=$(grep "version = .*" pyproject.toml | sed -E 's/.*"(.*)"/\1/')
          [ "v$VERSION" = "$TAG" ] || exit 1

      - name: Build package
        run: |
          pip install -r .github/workflows/requirements/build.txt --require-hashes
          python -m build

      - name: Upload build artifacts
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: dist
          path: ./dist/
          if-no-files-found: error  # if no files are found, something's very wrong!

      - name: Generate hashes for provenance
        id: hashes
        run: |
          # Get hashes for wheels and tarballs, encode in a single-line base64 string
          echo "hashes=$(sha256sum ./dist/* | base64 -w0)" >> $GITHUB_OUTPUT

  provenance:
    name: Publish provenance
    needs: [build]

    permissions:
      actions: read  # To read the workflow path.
      id-token: write  # To sign the provenance.
      contents: write  # To add assets to a release.

    # This Action currently can't be hash-pinned, see
    # https://github.com/slsa-framework/slsa-github-generator#referencing-slsa-builders-and-generators
    # Monitor https://github.com/slsa-framework/slsa-verifier/issues/12 to know when it
    # can be hash-pinned
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.8.0
    with:
      provenance-name: provenance-cronk-$TAG.intoto.jsonl
      base64-subjects: "${{ needs.build.outputs.hashes }}"
      upload-assets: true

  github-release:
    name: Publish to GitHub Releases
    runs-on: ubuntu-latest
    needs: [provenance]

    permissions:
      contents: write  # to modify the GitHub Release

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2

      - name: Upload artifacts to GitHub
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844 # v0.1.15
        with:
          files: dist/*

  pypi-release:
    name: Publish to PyPi(Test)
    runs-on: ubuntu-latest
    needs: [build,github-release]  # only publish if provenance available in GH Releases

    permissions:
      id-token: write # for OIDC publishing

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2

      - name: Confirm artifacts' integrity
        run: |
          # compare the hashes of the downloaded artifacts with the hashes calculated
          # when they were uploaded
          echo "${{ needs.build.outputs.hashes }}" | \
            base64 --decode | \
            sha256sum --check --status

      - name: Publish to PyPi(Test)
        uses: pypa/gh-action-pypi-publish@f8c70e705ffc13c3b4d1221169b84f12a75d6ca8 # v1.8.8
        with:
          repository-url: https://test.pypi.org/legacy/
